name: Build CI

on: [push]

env:
  GH_ACCESS_TOKEN: ${{secrets.GH_ACCESS_TOKEN}}    

jobs:  
  build-win:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - run: yarn
    - run: node scripts\prebuild.js prod
    - run: yarn make
    - uses: actions/upload-artifact@v3
      with:
        name: build-win
        path: cysync/out/make/*
        retention-days: 1


  build-linux:
    runs-on: ubuntu-latest
    needs: build-win

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - run: sudo apt-get install fakeroot dpkg rpm -y
    - run: yarn
    - run: node scripts/prebuild.js prod
    - run: yarn make
    - uses: actions/upload-artifact@v3
      with:
        name: build-linux
        path: cysync/out/make/*
        retention-days: 1

  release-build:
    runs-on: ubuntu-latest
    needs: build-linux

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - uses: actions/download-artifact@v3
    - run: yarn --ignore-scripts
    - run: node scripts/prebuild.js prod
    - run: ls -al
    - run: node scripts/postbuild.js prod "build-win,build-linux"

